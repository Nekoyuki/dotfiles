# my_bashrc
# Version 11
#**************************************

# PATH
#**************************************
if [ -e "$HOME/local/bin" ]; then
    export PATH="$HOME/local/bin:"$PATH
fi

# LANG
#**************************************
export EDITOR=vim

case ${OSTYPE} in
    linux*)
        # export SHELL=${HOME}/local/bin/zsh

        export LANG="en_US.UTF-8"
        # export LC_CTYPE="en_US.UTF-8"
        # export LC_NUMERIC="en_US.UTF-8"
        # export LC_TIME="en_US.UTF-8"
        # export LC_COLLATE="en_US.UTF-8"
        export LC_MONETARY="en_US.UTF-8"
        # export LC_MESSAGES="en_US.UTF-8"
        export LC_PAPER="en_US.UTF-8"
        export LC_NAME="en_US.UTF-8"
        export LC_ADDRESS="en_US.UTF-8"
        export LC_TELEPHONE="en_US.UTF-8"
        export LC_MEASUREMENT="en_US.UTF-8"
        export LC_IDENTIFICATION="en_US.UTF-8"

        if [ "${BASHRC_GOOGLE_PATH}" = "" ]; then
            export LC_CTYPE="ja_JP.UTF-8"
            export LC_NUMERIC="ja_JP.UTF-8"
            export LC_TIME="ja_JP.UTF-8"
            export LC_COLLATE="ja_JP.UTF-8"
            export LC_MESSAGES="ja_JP.UTF-8"
        fi

        ;;
    msys*)
        export SHELL=/usr/bin/bash

        case ${CONTITLE} in
            MSys2_UTF-8)
                export LANG="ja_JP.UTF-8"
                export OUTPUT_CHARSET=utf8
                ;;
            MSys2_SJIS)
                export LANG="ja_JP.SJIS"
                export OUTPUT_CHARSET=sjis
                ;;
        esac

        export BROWSER="C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
        ;;
esac

# color enabled
#**************************************
export TERM=xterm-256color

# prompt
#**************************************
if [ -z "${BASHRC_GOOGLE_PATH}" ]; then
    export PS1="\[\033[1;34m\][\!:\u@:\W]>\[\033[0m\]"
else
    export PS1="\[\033[1;34m\][\!:\u@\h:\W]>\[\033[0m\]"
fi

# completion
#**************************************
export LS_COLORS='di=34:ln=36:so=32:pi=33:ex=32:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

# functions
#**************************************
function hg(){ (head -1 $1 ; tail -n +2 $1 | grep $2) }

function settitle ()
{
    t="`hostname` [$@]"
    # "\e]2;" > control code to start changing the window title
    # "\007"  > control code to end
    echo -ne "\e]2;$t\007"
}

# function cd()
# {
#   builtin cd $@ && settitle `pwd` && ls
# }

function chpwd() {
  settitle `pwd` && ls --color=tty --show-control-chars -F
}

function ic()
{
	iconv -f SJIS -t UTF-8 $1 -o $1_ic_$$
	mv $1_ic_$$ $1
}

function wincmd()
{
    CMD=$1
    shift
    $CMD $* 2>&1 | iconv -f CP932 -t UTF-8
}

# alias
#**************************************
case ${OSTYPE} in
    linux*)
        alias ip='ipython --profile default'
        alias iq='ipython qtconsole --profile default --pylab=inline'
        alias tmux='LD_LIBRARY_PATH=$HOME/local/lib tmux'
        ;;
    msys*)
        alias jp='winpty jupyter console'
        alias jq='jupyter qtconsole'
        alias jn='jupyter notebook'
        alias ip='winpty ipython --profile default --pylab=auto'
        ;;
esac

case ${LANG} in
    ja_JP.UTF-8)
        alias ipconfig='wincmd ipconfig'
        alias netstat='wincmd netstat'
        alias netsh='wincmd netsh'
        alias ping='wincmd /c/Windows/System32/ping'
        alias tracert='wincmd TRACERT'
        ;;
    ja_JP.SJIS)
        ;;
esac

alias v='vim'
alias vi='vim'

alias ls='ls --color=tty --show-control-chars -F'
alias la='ls -a'
alias ll='ls -al'
alias l='ls'

# alias a='/c/Users/$USER/AppData/Local/atom/app-1.8.0/atom.exe'
alias c='clear'
alias d='diff'
alias g='grep --color -i'
alias h='history'
alias m='more'
alias p='pwd'

alias ..='cd ..'
alias cr='chrome'
alias df='df -h'
alias du='du -h'
alias he='head'
alias le='less -N'
alias pa='ps -a'
alias py='python'
alias rm='rm -i'
alias so='source'
alias ta='tail'
alias tm='tmux'

alias csvc='csvcut'
alias csvl='csvlook'
alias csvg='csvgrep'

# global alias
#**************************************

# Python
#**************************************
case ${OSTYPE} in
    linux*)
        ;;
    msys*)
        if [ -e "/c/Anaconda3/python" ]; then
            export PATH='/c/Anaconda3:/c/Anaconda3/Scripts:'$PATH
            # export PYTHONPATH='/c/Anaconda3/Lib/site-packages'
        fi
        ;;
esac

# Go
#**************************************
case ${OSTYPE} in
    linux*)
        ;;
    msys*)
        if [ -e "/c/Go/bin/go" ]; then
            export GOPATH=/c/Go
            export PATH='/c/Go/bin:'$PATH
        fi
        ;;
esac

# peco
#**************************************
if which fzy >/dev/null; then
    PECO="fzy"
    PECO_OPT="-l 20"

    peco-select-history() {
        declare l=$(HISTTIMEFORMAT=  history | LC_ALL=C tac | cut -d' ' -f 4- |  awk '!a[$0]++' | $PECO $PECO_OPT --query "$READLINE_LINE")
        READLINE_LINE="$l"
        READLINE_POINT=${#l}
    }
    bind -x '"\C-r": peco-select-history'
fi

# ATOM
#**************************************

# Chrome
#**************************************
case ${OSTYPE} in
    linux*)
        ;;
    msys*)
        if [ -e "/c/\Program Files (x86)/Google/Chrome/Application" ]; then
            export PATH="/c/\Program Files (x86)/Google/Chrome/Application:"$PATH
        fi
        ;;
esac

